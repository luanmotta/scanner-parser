INCLUDES: #include
DEFINES: #define

TIPO: int | double | char

STRING: "."
NUMERO: [0-9]\.[0-9]

COMENTARIO: /* */ | //

INCDEC: ++ | --

OPERADOR: + | - | / | *


ACESSO_EM_ID: $$[ID] | ->ID$$ ? ACESSO_EM_ID

IDENTIFICADOR: ID ? ACESSO_EM_ID

IDENTIFICADOR_OP: IDENTIFICADOR || $$INCDEC IDENTIFICADOR$$ || $$IDENTIFICADOR INCDEC$$


VALOR: CHAMADA_DE_FUNCAO | IDENTIFICADOR_OP | NUMERO | STRING

EXPRESSAO: VALOR ? OPERADOR EXPRESSAO

ATRIBUICAO: IDENTIFICADOR = EXPRESSAO;

INICIALIZACAO: = EXPRESSAO;

DECLARACAO: TIPO IDENTIFICADOR ?INICIALIZACAO ;



PASSAGEM_DE_PARAMETROS: VALOR ?,VALOR

CHAMADA_DE_FUNCAO: IDENTIFICADOR(PASSAGEM_DE_PARAMETROS)

PARAMETRO_DA_FUNCAO: TIPO IDENTIFICADOR

PARAMETROS_DA_FUNCAO: PARAMETRO_DA_FUNCAO ?,PARAMETRO_DA_FUNCAO


CONDICAO: (EXPRESSAO | ATRIBUICAO | DECLARACAO)


FOR_CONDICAO: (EXPRESSAO | vazio; CONDICAO; EXPRESSAO | vazio)

SWITCH_BLOCO: {
  CASE
}


RETURN: return EXPRESSAO

IF: if CONDICAO BLOCO ?ELSE

ELSE: else ?IF | BLOCO

SWITCH: switch (IDENTIFICADOR) SWITCH_BLOCO

CASE: case VALOR $:$ BLOCO ? CASE

WHILE: while CONDICAO BLOCO

FOR: for FOR_CONDICAO BLOCO

DO: do BLOCO UNTIL

UNTIL: while CONDICAO


COMANDOS: RETURN | IF | SWITCH | WHILE | FOR | DO



BLOCO: {
	DECLARACAO | ATRIBUICAO | COMANDOS
}


FUNCAO: TIPO IDENTIFICADOR (PARAMETROS_DA_FUNCAO) BLOCO

MAIN: int main() BLOCO

PROGRAMA: ?INCLUSAO ?DEFINE ?FUNCAO MAIN
